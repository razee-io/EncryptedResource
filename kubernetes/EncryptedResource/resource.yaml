apiVersion: v1
kind: List
metadata:
  name: encryptedresource-controller-list
  annotations:
    version: "{{{TRAVIS_COMMIT}}}"
type: array
items:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: encryptedresource-controller
      annotations:
        razee.io/git-repo: "{{{GIT_REMOTE}}}"
        razee.io/commit-sha: "{{{TRAVIS_COMMIT}}}"
      labels:
        razee/watch-resource: "lite"
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: encryptedresource-controller
      strategy:
        type: RollingUpdate
      template:
        metadata:
          labels:
            app: encryptedresource-controller
            razee/watch-resource: "lite"
          name: encryptedresource-controller
        spec:
          serviceAccountName: razeedeploy-sa
          securityContext:
            runAsUser: {{{NODE_USER_ID}}}
            runAsGroup: {{{NODE_GROUP_ID}}}
            fsGroup: {{{NODE_GROUP_ID}}}
          containers:
            - image: "quay.io/razee/encryptedresource:{{{TRAVIS_TAG}}}"
              resources:
                limits:
                  memory: 200Mi
                  cpu: 100m
                requests:
                  memory: 75Mi
                  cpu: 40m
              env:
                - name: USER_AGENT_NAME
                  value: razee-io/encryptedresource
                - name: USER_AGENT_VERSION
                  value: "{{{TRAVIS_TAG}}}"
                - name: CRD_WATCH_TIMEOUT_SECONDS
                  valueFrom:
                    configMapKeyRef:
                      name: razeedeploy-overrides
                      key: CRD_WATCH_TIMEOUT_SECONDS
                      optional: true
              imagePullPolicy: Always
              name: encryptedresource-controller
              livenessProbe:
                exec:
                  command:
                    - sh/liveness.sh
                initialDelaySeconds: 30
                periodSeconds: 150
                timeoutSeconds: 30
                failureThreshold: 1
              volumeMounts:
                - mountPath: /home/node/download-cache
                  name: cache-volume
                - mountPath: /home/node/config
                  name: razeedeploy-config
          volumes:
            - name: cache-volume
              emptyDir: {}
            - name: razeedeploy-config
              configMap:
                name: razeedeploy-config
                defaultMode: 400
                optional: true

  - apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      # name must match the spec fields below, and be in the form: <plural>.<group>
      name: encryptedresources.deploy.razee.io
      annotations:
        razee.io/git-repo: "{{{GIT_REMOTE}}}"
        razee.io/commit-sha: "{{{TRAVIS_COMMIT}}}"
    spec:
      # group name to use for REST API: /apis/<group>/<version>
      group: deploy.razee.io
      # list of versions supported by this CustomResourceDefinition
      versions:
        - name: v1alpha2
          # Each version can be enabled/disabled by Served flag.
          served: true
          # One and only one version must be marked as the storage version.
          storage: true
          schema:
            # openAPIV3Schema is the schema for validating custom objects.
            openAPIV3Schema:
              type: object
              required: [spec]
              properties:
                spec:
                  type: object
                  required: [resources, auth]
                  properties:
                    resources:
                      type: array
                      minItems: 1
                      items:
                        type: string
                    clusterAuth:
                      type: object
                      properties:
                        impersonateUser:
                          type: string
                    auth:
                      type: object
                      oneOf:
                        - required: [privateKey]
                        - required: [privateKeyRef]
                      properties:
                        privateKey:
                          type: string
                        privateKeyRef:
                          type: object
                          required: [valueFrom]
                          properties:
                            valueFrom:
                              type: object
                              required: [secretKeyRef]
                              properties:
                                secretKeyRef:
                                  type: object
                                  required: [name, key]
                                  properties:
                                    name:
                                      type: string
                                    namespace:
                                      type: string
                                    key:
                                      type: string
                        passphrase:
                          type: string
                        passphraseRef:
                          type: object
                          required: [valueFrom]
                          properties:
                            valueFrom:
                              type: object
                              required: [secretKeyRef]
                              properties:
                                secretKeyRef:
                                  type: object
                                  required: [name, key]
                                  properties:
                                    name:
                                      type: string
                                    namespace:
                                      type: string
                                    key:
                                      type: string
                status:
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
          subresources:
            # status enables the status subresource.
            status: {}
      # either Namespaced or Cluster
      scope: Namespaced
      names:
        # plural name to be used in the URL: /apis/<group>/<version>/<plural>
        plural: encryptedresources
        # singular name to be used as an alias on the CLI and for display
        singular: encryptedresource
        # kind is normally the CamelCased singular type. Your resource manifests use this.
        kind: EncryptedResource
        # shortNames allow shorter string to match your resource on the CLI
        shortNames:
          - er
        categories:
          - razee
